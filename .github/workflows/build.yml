name: Build

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build-wheels:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.13

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install "setuptools>=77.0.0" wheel build cibuildwheel cython

    - name: Build sdist
      run: python -m build --sdist --outdir dist

    - name: Build wheels
      uses: pypa/cibuildwheel@v3.1.4
      env:
        CIBW_SKIP: "cp38-*"
        CIBW_BEFORE_BUILD: |
          pip install --upgrade pip setuptools>=77.0.0 wheel build
          pip install cython
        CIBW_BEFORE_BUILD_WINDOWS: "pip install cython"
        CIBW_ARCHS_MACOS: "x86_64 arm64"
        CIBW_ARCHS_WINDOWS: "AMD64"
        CIBW_ARCHS_LINUX: "x86_64"
        CIBW_OUTPUT_DIR: wheelhouse

    - name: Upload artifacts for matrix
      uses: actions/upload-artifact@v4
      with:
        name: ani-yt-${{ matrix.os }}
        path: |
          dist/*
          wheelhouse/*

  merge-artifacts:
    needs: build-wheels
    runs-on: ubuntu-latest
    steps:
    - name: Checkout artifacts branch
      uses: actions/checkout@v3
      with:
        ref: artifacts
        fetch-depth: 0

    - name: Fetch main branch
      run: git fetch origin main

    - name: Merge main into artifacts
      run: |
        git merge origin/main --no-ff -m "Sync main into artifacts" || echo "No changes to merge"

    - name: Download Ubuntu artifacts
      uses: actions/download-artifact@v4
      with:
        name: ani-yt-ubuntu-latest
        path: artifacts/ubuntu-latest

    - name: Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: ani-yt-macos-latest
        path: artifacts/macos-latest

    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: ani-yt-windows-latest
        path: artifacts/windows-latest

    - name: Generate SHA256 digests
      run: |
        mkdir -p artifacts/digests
        for f in artifacts/ubuntu-latest/dist/* artifacts/ubuntu-latest/wheelhouse/* \
                 artifacts/macos-latest/dist/* artifacts/macos-latest/wheelhouse/* \
                 artifacts/windows-latest/dist/* artifacts/windows-latest/wheelhouse/*; do
          sha256sum "$f" > "artifacts/digests/$(basename "$f").sha256"
        done

    - name: Commit and push all artifacts
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add -f artifacts/*
        git commit -m "Update build artifacts for all OS" || echo "No changes to commit"
        git push origin artifacts

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ github.ref_name }}
        generateReleaseNotes: true
        prerelease: ${{ contains(github.ref_name, 'a') || contains(github.ref_name, 'b') || contains(github.ref_name, 'rc') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') }}
        artifacts: |
          artifacts/ubuntu-latest/dist/*.tar.gz
          artifacts/ubuntu-latest/wheelhouse/*.whl
          artifacts/macos-latest/dist/*.tar.gz
          artifacts/macos-latest/wheelhouse/*.whl
          artifacts/windows-latest/dist/*.tar.gz
          artifacts/windows-latest/wheelhouse/*.whl
          artifacts/digests/*.sha256
          artifacts/help/cli_help.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  generate-simple-index:
    needs: merge-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: artifacts
          fetch-depth: 0

      - name: Generate PyPI-style simple index
        run: |
          mkdir -p gh-pages/aniyt
          for f in artifacts/*/*/*.whl; do
            fname=$(basename "$f")
            cp "$f" gh-pages/aniyt/
            echo "<a href='$fname'>$fname</a><br>" >> gh-pages/aniyt/index.html
          done
          for f in artifacts/*/*/*.tar.gz; do
            fname=$(basename "$f")
            cp "$f" gh-pages/aniyt/
            echo "<a href='$fname'>$fname</a><br>" >> gh-pages/aniyt/index.html
          done

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages
